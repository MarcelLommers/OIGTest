@model OIG_Test.Models.Research

@{
    ViewData["Title"] = "Edit";

    // Not a clean fix, but for some reason the format breaks
    // between controller and input, this corrects the format issue.
    var defaultStartTime = Model.StartDate.ToString("yyyy-MM-dd HH:mm:ss").Replace(' ', 'T');
    var defaultEndTime = Model.EndDate.ToString("yyyy-MM-dd HH:mm:ss").Replace(' ', 'T');

    // Editing can only happen before the research has started.
    bool canEdit = DateTime.Now < Model.StartDate;
    // Research is always allowed to be stopped.
    bool canStop = Model.StartDate < DateTime.Now && DateTime.Now < Model.EndDate;
}

<h1>Edit</h1>

<h4>Research</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ResearchId" />

            @if (canEdit)
            {
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="StartDate" class="control-label"></label>
                    <input asp-for="StartDate" class="form-control" value="@defaultStartTime" />
                    <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="EndDate" class="control-label"></label>
                    <input asp-for="EndDate" class="form-control" value="@defaultEndTime" />
                    <span asp-validation-for="EndDate" class="text-danger"></span>
                </div>
            }
            else
            {
                <div class="form-group">
                    <dt class="control-label">
                        @Html.DisplayNameFor(model => model.Name)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Name)
                    </dd>
                    <dt class="control-label">
                        @Html.DisplayNameFor(model => model.StartDate)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.StartDate)
                    </dd>
                    <dt class="control-label">
                        @Html.DisplayNameFor(model => model.EndDate)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.EndDate)
                    </dd>
                </div>
            }

            <div class="form-group">
                <dt class="control-label">
                    @Html.DisplayNameFor(model => model.ResearchState)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ResearchState)
                </dd>
            </div>

            @if (canEdit)
            {
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            }
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
    @if (canStop)
    {
        @(" | ")
        <a asp-action="Stop" asp-route-id="@Model.ResearchId">Stop Research</a>
    }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
