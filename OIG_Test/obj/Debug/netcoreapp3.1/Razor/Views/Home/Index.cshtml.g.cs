#pragma checksum "D:\repo's\OIG_test\OIG_Test\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7d3938b2be5541624bb1cfaef11504450cfb5621"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\repo's\OIG_test\OIG_Test\Views\_ViewImports.cshtml"
using OIG_Test;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\repo's\OIG_test\OIG_Test\Views\_ViewImports.cshtml"
using OIG_Test.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7d3938b2be5541624bb1cfaef11504450cfb5621", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b10e8326ad0123f098c4a73624facaa3fc6d5386", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\repo's\OIG_test\OIG_Test\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
    <div class=""text-center"">
        <h1 class=""display-4"">Welcome</h1>
        <hr />

        <h3>read me for context:</h3>
        <p style=""text-align:left"">
            RazorPages were used since they were relatively easy to set-up. <br />
            Had i used vue i'd have been able to make a more custom frontend. <br />
            However i will be able to provide a step by step on how i'd have done that. <br />
            Considering i am a bit rusty with razor pages, this seemed like a good chance to polish that back up a bit.
        </p>
        <p style=""text-align:left"">
            The result however is that this might is a bit rough around the edges, apologies for that. <br />
        </p>
        <hr />
        <p style=""text-align:left"">
            Basic design kept in place since it required little to no tweaking while being fairly clear. <br />
            Added simple background colors to index page, to indicate ResearchState. <br />
            Concept didn't get ");
            WriteLiteral(@"one since that state wasn't going to be visible with current the stated requirements. <br />
        </p>

        <ol style=""list-style-type:none; margin:auto; width:50vw"">
            <li style=""background-color:#f1f1f1"">Gepland</li>
            <li style=""background-color: #f5e27e"">Lopend</li>
            <li style=""background-color: #a0e57c"">Afgerond</li>
        </ol>

    </div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
